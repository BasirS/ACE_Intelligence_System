---
// Violation Hotspot Explorer - Interactive map with filtering
// Based on the enhanced_spatial_intelligence_map.html with additional filtering
export interface HotspotExplorerProps {
  height?: string;
  showControls?: boolean;
  showCUNYCampuses?: boolean;
}

interface Props extends HotspotExplorerProps {}

const {
  height = '600px',
  showControls = true,
  showCUNYCampuses = true
} = Astro.props;
---

<div id="violation-hotspot-explorer" class="w-full bg-white rounded-lg shadow-lg overflow-hidden">
  {showControls && (
    <div class="p-6 border-b border-gray-200 bg-gray-50">
      <div class="flex flex-wrap gap-4 items-center">
        <h3 class="text-xl font-bold text-gray-900">NYC Bus Violation Hotspots</h3>

        <div class="flex flex-wrap gap-4 ml-auto">
          <!-- Distance Filter -->
          <div class="flex items-center gap-2">
            <label for="distance-filter" class="text-sm font-medium text-gray-700">
              Distance to CUNY:
            </label>
            <select id="distance-filter" class="px-3 py-1 border border-gray-300 rounded-md text-sm">
              <option value="all">All Locations</option>
              <option value="250">‚â§250m (Immediate)</option>
              <option value="500">‚â§500m (Walking)</option>
              <option value="1000">‚â§1km (Short Transit)</option>
              <option value="2000">‚â§2km (Medium Distance)</option>
            </select>
          </div>

          <!-- Violation Type Filter -->
          <div class="flex items-center gap-2">
            <label for="violation-type" class="text-sm font-medium text-gray-700">
              Violation Type:
            </label>
            <select id="violation-type" class="px-3 py-1 border border-gray-300 rounded-md text-sm">
              <option value="all">All Types</option>
              <option value="MOBILE BUS STOP">Bus Stop Violations</option>
              <option value="MOBILE BUS LANE">Bus Lane Violations</option>
              <option value="MOBILE DOUBLE PARKED">Double Parking</option>
            </select>
          </div>

          <!-- Time Period Filter -->
          <div class="flex items-center gap-2">
            <label for="time-period" class="text-sm font-medium text-gray-700">
              Time Period:
            </label>
            <select id="time-period" class="px-3 py-1 border border-gray-300 rounded-md text-sm">
              <option value="all">All Hours</option>
              <option value="morning-rush">Morning Rush (7-9 AM)</option>
              <option value="class-hours">Class Hours (8 AM-6 PM)</option>
              <option value="evening-rush">Evening Rush (5-7 PM)</option>
              <option value="off-peak">Off-Peak Hours</option>
            </select>
          </div>

          <!-- Toggle Layers -->
          <div class="flex items-center gap-4">
            <label class="flex items-center gap-2">
              <input type="checkbox" id="show-cuny" checked={showCUNYCampuses} class="rounded">
              <span class="text-sm text-gray-700">CUNY Campuses</span>
            </label>
            <label class="flex items-center gap-2">
              <input type="checkbox" id="show-heatmap" checked class="rounded">
              <span class="text-sm text-gray-700">Heat Map</span>
            </label>
            <label class="flex items-center gap-2">
              <input type="checkbox" id="show-routes" class="rounded">
              <span class="text-sm text-gray-700">Bus Routes</span>
            </label>
          </div>
        </div>
      </div>

      <!-- Stats Display -->
      <div class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-4">
        <div class="text-center p-3 bg-white rounded border">
          <div class="text-2xl font-bold text-blue-600" id="total-hotspots">---</div>
          <div class="text-xs text-gray-600">Total Hotspots</div>
        </div>
        <div class="text-center p-3 bg-white rounded border">
          <div class="text-2xl font-bold text-red-600" id="high-impact">---</div>
          <div class="text-xs text-gray-600">High Impact (>20k)</div>
        </div>
        <div class="text-center p-3 bg-white rounded border">
          <div class="text-2xl font-bold text-orange-600" id="cuny-proximity">---</div>
          <div class="text-xs text-gray-600">Near CUNY (<500m)</div>
        </div>
        <div class="text-center p-3 bg-white rounded border">
          <div class="text-2xl font-bold text-green-600" id="selected-hotspots">---</div>
          <div class="text-xs text-gray-600">Currently Shown</div>
        </div>
      </div>
    </div>
  )}

  <!-- Map Container -->
  <div class="relative">
    <div id="hotspot-map" style={`height: ${height};`} class="w-full bg-gray-100">
      <!-- Map will be loaded here -->
    </div>

    <!-- Loading Overlay -->
    <div id="map-loading" class="absolute inset-0 bg-white bg-opacity-90 flex items-center justify-center">
      <div class="text-center">
        <div class="animate-spin w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full mx-auto mb-4"></div>
        <div class="text-gray-600">Loading violation data...</div>
      </div>
    </div>

    <!-- Map Legend -->
    <div id="map-legend" class="absolute top-4 right-4 bg-white bg-opacity-95 backdrop-blur-sm rounded-lg p-4 shadow-lg max-w-xs">
      <div class="font-semibold text-gray-800 mb-3 flex items-center gap-2">
        <span>üìç</span> Map Legend
      </div>

      <div class="space-y-3 text-sm">
        <div>
          <div class="font-medium text-gray-700 mb-2">Distance to CUNY Campuses:</div>
          <div class="space-y-1">
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 rounded-full bg-red-500"></div>
              <span>‚â§250m (Immediate vicinity)</span>
            </div>
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 rounded-full bg-orange-500"></div>
              <span>250-500m (Walking distance)</span>
            </div>
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
              <span>500m-1km (Short transit)</span>
            </div>
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 rounded-full bg-blue-400"></div>
              <span>1-2km (Medium distance)</span>
            </div>
            <div class="flex items-center gap-2">
              <div class="w-3 h-3 rounded-full bg-blue-700"></div>
              <span>>2km (Far from campus)</span>
            </div>
          </div>
        </div>

        <div>
          <div class="font-medium text-gray-700 mb-2">Special Markers:</div>
          <div class="space-y-1">
            <div class="flex items-center gap-2">
              <span>üéì</span>
              <span>CUNY Campuses</span>
            </div>
            <div class="flex items-center gap-2">
              <span>üöå</span>
              <span>Major Bus Routes</span>
            </div>
            <div class="flex items-center gap-2">
              <span>‚ö†Ô∏è</span>
              <span>High Violation Areas</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Selected Hotspot Details -->
  <div id="hotspot-details" class="p-6 bg-gray-50 border-t hidden">
    <h4 class="text-lg font-semibold mb-4">Selected Hotspot Details</h4>
    <div class="grid md:grid-cols-2 gap-6">
      <div>
        <h5 class="font-medium text-gray-700 mb-2">Location Information</h5>
        <div id="location-info" class="space-y-2 text-sm">
          <!-- Will be populated by JavaScript -->
        </div>
      </div>
      <div>
        <h5 class="font-medium text-gray-700 mb-2">Violation Statistics</h5>
        <div id="violation-stats" class="space-y-2 text-sm">
          <!-- Will be populated by JavaScript -->
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet.heat@0.2.0/dist/leaflet-heat.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<script>
  class ViolationHotspotExplorer {
    constructor() {
      this.map = null;
      this.hotspotData = [];
      this.cunyData = [];
      this.filteredData = [];
      this.markers = [];
      this.heatmapLayer = null;
      this.cunyMarkers = [];

      // CUNY campus locations (approximate)
      this.cunyLocations = [
        { name: 'Baruch College', lat: 40.7402, lng: -73.9836, type: 'senior' },
        { name: 'Hunter College', lat: 40.7685, lng: -73.9656, type: 'senior' },
        { name: 'City College', lat: 40.8200, lng: -73.9493, type: 'senior' },
        { name: 'Brooklyn College', lat: 40.6314, lng: -73.9521, type: 'senior' },
        { name: 'Queens College', lat: 40.7366, lng: -73.8170, type: 'senior' },
        { name: 'York College', lat: 40.7003, lng: -73.7967, type: 'senior' },
        { name: 'Lehman College', lat: 40.8732, lng: -73.8927, type: 'senior' },
        { name: 'John Jay College', lat: 40.7705, lng: -73.9886, type: 'senior' },
        { name: 'Medgar Evers College', lat: 40.6675, lng: -73.9583, type: 'senior' },
        { name: 'NYC College of Technology', lat: 40.6962, lng: -73.9881, type: 'senior' },
        { name: 'College of Staten Island', lat: 40.6037, lng: -74.1563, type: 'senior' }
      ];

      this.init();
    }

    async init() {
      await this.waitForDataLoader();
      await this.loadData();
      this.initializeMap();
      this.setupEventListeners();
      this.applyFilters();
    }

    async waitForDataLoader() {
      return new Promise((resolve) => {
        if (window.ClearLaneData) {
          resolve();
        } else {
          window.addEventListener('clearlane-data-ready', resolve);
        }
      });
    }

    async loadData() {
      try {
        // Load hotspot data
        this.hotspotData = await window.ClearLaneData.loadDataset('top_hotspots.csv');

        // Load CUNY-specific data
        const cunyData = await window.ClearLaneData.loadDataset('CUNY_Insights/campus_summary_2025.csv');
        this.cunyData = cunyData;

        console.log('Hotspot data loaded:', this.hotspotData.length, 'hotspots');
        console.log('CUNY data loaded:', this.cunyData.length, 'campuses');

        // Hide loading overlay
        document.getElementById('map-loading').style.display = 'none';

      } catch (error) {
        console.error('Failed to load hotspot data:', error);
        document.getElementById('map-loading').innerHTML =
          '<div class="text-center text-red-600">Failed to load data. Please refresh the page.</div>';
      }
    }

    initializeMap() {
      // Initialize Leaflet map centered on NYC
      this.map = L.map('hotspot-map').setView([40.7589, -73.9851], 11);

      // Add OpenStreetMap tiles
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '¬© OpenStreetMap contributors',
        maxZoom: 19
      }).addTo(this.map);

      // Add CUNY campus markers
      this.addCUNYMarkers();
    }

    addCUNYMarkers() {
      this.cunyLocations.forEach(campus => {
        const icon = L.divIcon({
          html: 'üéì',
          iconSize: [25, 25],
          className: 'cuny-marker'
        });

        const marker = L.marker([campus.lat, campus.lng], { icon })
          .bindPopup(`
            <div class="p-2">
              <h4 class="font-semibold">${campus.name}</h4>
              <p class="text-sm text-gray-600">${campus.type === 'senior' ? 'Senior College' : 'Community College'}</p>
            </div>
          `);

        this.cunyMarkers.push(marker);
        marker.addTo(this.map);
      });
    }

    setupEventListeners() {
      // Filter controls
      document.getElementById('distance-filter')?.addEventListener('change', () => this.applyFilters());
      document.getElementById('violation-type')?.addEventListener('change', () => this.applyFilters());
      document.getElementById('time-period')?.addEventListener('change', () => this.applyFilters());

      // Layer toggles
      document.getElementById('show-cuny')?.addEventListener('change', (e) => this.toggleCUNYMarkers(e.target.checked));
      document.getElementById('show-heatmap')?.addEventListener('change', (e) => this.toggleHeatmap(e.target.checked));
      document.getElementById('show-routes')?.addEventListener('change', (e) => this.toggleRoutes(e.target.checked));
    }

    calculateDistanceToCUNY(lat, lng) {
      let minDistance = Infinity;

      this.cunyLocations.forEach(campus => {
        const distance = this.haversineDistance(lat, lng, campus.lat, campus.lng);
        minDistance = Math.min(minDistance, distance);
      });

      return minDistance * 1000; // Convert to meters
    }

    haversineDistance(lat1, lng1, lat2, lng2) {
      const R = 6371; // Earth's radius in km
      const dLat = (lat2 - lat1) * Math.PI / 180;
      const dLng = (lng2 - lng1) * Math.PI / 180;
      const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                Math.sin(dLng/2) * Math.sin(dLng/2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
      return R * c;
    }

    getMarkerColor(distanceToCUNY) {
      if (distanceToCUNY <= 250) return '#d73027'; // Red
      if (distanceToCUNY <= 500) return '#f46d43';  // Orange
      if (distanceToCUNY <= 1000) return '#fdae61'; // Yellow
      if (distanceToCUNY <= 2000) return '#abd9e9'; // Light blue
      return '#74add1'; // Blue
    }

    applyFilters() {
      // Clear existing markers
      this.clearHotspotMarkers();

      // Get filter values
      const distanceFilter = document.getElementById('distance-filter')?.value || 'all';
      const violationTypeFilter = document.getElementById('violation-type')?.value || 'all';
      const timePeriodFilter = document.getElementById('time-period')?.value || 'all';

      // Filter data
      this.filteredData = this.hotspotData.filter(hotspot => {
        const distanceToCUNY = this.calculateDistanceToCUNY(hotspot.avg_lat, hotspot.avg_lon);

        // Distance filter
        if (distanceFilter !== 'all') {
          const maxDistance = parseInt(distanceFilter);
          if (distanceToCUNY > maxDistance) return false;
        }

        // Additional filters would be applied here based on available data
        // For now, we'll use the basic distance filter

        return true;
      });

      // Update markers and heatmap
      this.addHotspotMarkers();
      this.updateHeatmap();
      this.updateStats();
    }

    addHotspotMarkers() {
      this.filteredData.forEach(hotspot => {
        const distanceToCUNY = this.calculateDistanceToCUNY(hotspot.avg_lat, hotspot.avg_lon);
        const color = this.getMarkerColor(distanceToCUNY);

        const marker = L.circleMarker([hotspot.avg_lat, hotspot.avg_lon], {
          radius: Math.min(Math.max(hotspot.violations / 1000, 3), 15),
          fillColor: color,
          color: '#ffffff',
          weight: 2,
          opacity: 0.8,
          fillOpacity: 0.7
        }).bindPopup(`
          <div class="p-3 min-w-64">
            <h4 class="font-semibold text-lg mb-2">${hotspot.stop_name}</h4>
            <div class="space-y-2 text-sm">
              <div><span class="font-medium">Total Violations:</span> ${hotspot.violations.toLocaleString()}</div>
              <div><span class="font-medium">Distance to CUNY:</span> ${Math.round(distanceToCUNY)}m</div>
              <div><span class="font-medium">Location:</span> ${hotspot.avg_lat.toFixed(4)}, ${hotspot.avg_lon.toFixed(4)}</div>
            </div>
            <button onclick="window.hotspotExplorer.showDetails('${hotspot.stop_name}')"
                    class="mt-3 px-3 py-1 bg-blue-600 text-white text-xs rounded hover:bg-blue-700">
              View Details
            </button>
          </div>
        `);

        this.markers.push(marker);
        marker.addTo(this.map);
      });
    }

    clearHotspotMarkers() {
      this.markers.forEach(marker => this.map.removeLayer(marker));
      this.markers = [];
    }

    updateHeatmap() {
      if (this.heatmapLayer) {
        this.map.removeLayer(this.heatmapLayer);
      }

      if (document.getElementById('show-heatmap')?.checked) {
        const heatmapData = this.filteredData.map(hotspot => [
          hotspot.avg_lat,
          hotspot.avg_lon,
          hotspot.violations / 10000 // Normalize intensity
        ]);

        this.heatmapLayer = L.heatLayer(heatmapData, {
          radius: 25,
          blur: 15,
          maxZoom: 17,
          gradient: {
            0.0: 'blue',
            0.2: 'cyan',
            0.4: 'lime',
            0.6: 'yellow',
            0.8: 'orange',
            1.0: 'red'
          }
        }).addTo(this.map);
      }
    }

    updateStats() {
      const totalHotspots = this.hotspotData.length;
      const highImpact = this.hotspotData.filter(h => h.violations > 20000).length;
      const cunyProximity = this.hotspotData.filter(h =>
        this.calculateDistanceToCUNY(h.avg_lat, h.avg_lon) <= 500
      ).length;
      const currentlyShown = this.filteredData.length;

      document.getElementById('total-hotspots').textContent = totalHotspots.toLocaleString();
      document.getElementById('high-impact').textContent = highImpact.toLocaleString();
      document.getElementById('cuny-proximity').textContent = cunyProximity.toLocaleString();
      document.getElementById('selected-hotspots').textContent = currentlyShown.toLocaleString();
    }

    toggleCUNYMarkers(show) {
      this.cunyMarkers.forEach(marker => {
        if (show) {
          marker.addTo(this.map);
        } else {
          this.map.removeLayer(marker);
        }
      });
    }

    toggleHeatmap(show) {
      this.updateHeatmap();
    }

    toggleRoutes(show) {
      // Route layer toggle would be implemented here
      console.log('Route toggle:', show);
    }

    showDetails(stopName) {
      const hotspot = this.filteredData.find(h => h.stop_name === stopName);
      if (!hotspot) return;

      const detailsContainer = document.getElementById('hotspot-details');
      const locationInfo = document.getElementById('location-info');
      const violationStats = document.getElementById('violation-stats');

      const distanceToCUNY = this.calculateDistanceToCUNY(hotspot.avg_lat, hotspot.avg_lon);

      locationInfo.innerHTML = `
        <div><span class="font-medium">Stop Name:</span> ${hotspot.stop_name}</div>
        <div><span class="font-medium">Coordinates:</span> ${hotspot.avg_lat.toFixed(6)}, ${hotspot.avg_lon.toFixed(6)}</div>
        <div><span class="font-medium">Distance to Nearest CUNY:</span> ${Math.round(distanceToCUNY)}m</div>
        <div><span class="font-medium">CUNY Impact Level:</span> ${distanceToCUNY <= 500 ? 'High' : distanceToCUNY <= 1000 ? 'Medium' : 'Low'}</div>
      `;

      violationStats.innerHTML = `
        <div><span class="font-medium">Total Violations:</span> ${hotspot.violations.toLocaleString()}</div>
        <div><span class="font-medium">Ranking:</span> #${this.hotspotData.indexOf(hotspot) + 1} citywide</div>
        <div><span class="font-medium">Impact Category:</span> ${hotspot.violations > 20000 ? 'Very High' : hotspot.violations > 10000 ? 'High' : 'Moderate'}</div>
        <div><span class="font-medium">Priority Level:</span> ${distanceToCUNY <= 500 && hotspot.violations > 15000 ? 'Critical' : 'Standard'}</div>
      `;

      detailsContainer.classList.remove('hidden');
    }
  }

  // Initialize the explorer when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    window.hotspotExplorer = new ViolationHotspotExplorer();
  });
</script>

<style>
  .cuny-marker {
    background: transparent;
    border: none;
    font-size: 20px;
  }

  /* Leaflet popup customization */
  .leaflet-popup-content-wrapper {
    border-radius: 8px;
  }

  .leaflet-popup-content {
    margin: 0;
  }

  /* Loading animation */
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>